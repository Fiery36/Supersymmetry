import globals.Globals

DISTLLERY = recipemap('distillery')
BR = recipemap('batch_reactor')
AUTOCLAVE = recipemap('autoclave')
DT = recipemap('distillation_tower')
DRYER = recipemap('dryer')
MIXER = recipemap('mixer')
ROASTER = recipemap('roaster')
FBR = recipemap('fixed_bed_reactor')
LCR = recipemap('large_chemical_reactor')
ION_EXCHANGE = recipemap('ion_exchange_column')
SIFTER = recipemap('sifter')

// 1 zeolite dust corresponds to 1 mole of Al atoms. Typically exhibits 1 Na:1 Al. Si:Al ratio (SAR) never drops below 1.

// Si & Al sources

DISTILLERY.recipeBuilder()
    .fluidInputs(fluid('sodium_silicate_solution') * 1000)
    .outputs(metaitem('dustSodiumSilicate') * 6)
    .fluidOutputs(fluid('water') * 1000)
    .duration(20)
    .EUt(30)
    .buildAndRegister()

BR.recipeBuilder()
    .fluidInputs(fluid('sodium_hydroxide_solution') * 2000)
    .fluidInputs(fluid('dense_steam') * 1000)
    .inputs(ore('dustSiliconDioxide') * 3)
    .fluidOutputs(fluid('diluted_sodium_silicate_solution') * 4000)
    .duration(200)
    .EUt(30)
    .buildAndRegister()

DISTILLERY.recipeBuilder()
    .fluidInputs(fluid('sodium_aluminate_solution') * 1500)
    .fluidOutputs(fluid('water') * 1500)
    .outputs(metaitem('dustSodiumAluminate') * 4)
    .duration(160)
    .EUt(30)
    .buildAndRegister()

BR.recipeBuilder()
    .fluidInputs(fluid('sodium_hydroxide_solution') * 2000)
    .inputs(ore('dustAnyPurityAluminium') * 2)
    .fluidOutputs(fluid('hydrogen') * 6000)
    .outputs(metaitem('dustSodiumAluminate') * 8)
    .duration(200)
    .EUt(30)
    .buildAndRegister()

MIXER.recipeBuilder()
    .fluidInputs(fluid('diluted_sodium_silicate_solution') * 4000)
    .fluidInputs(fluid('ammonia_solution') * 1000)
    .fluidInputs(fluid('stabilized_sodium_silicate_solution') * 5000)
    .duration(200)
    .EUt(480)
    .buildAndRegister();

DT.recipeBuilder()
    .fluidInputs(fluid('diluted_sodium_silicate_solution') * 1000)
    .fluidOutputs(fluid('water') * 750)
    .fluidOutputs(fluid('sodium_silicate_solution') * 250)
    .duration(200)
    .EUt(30)
    .buildAndRegister()

ION_EXCHANGE.recipeBuilder()
    .notConsumable(metaitem('beads.strong_acidic_cation_exchange'))
    .fluidInputs(fluid('diluted_sodium_silicate_solution') * 5000)
    .fluidInputs(fluid('hydrochloric_acid') * 2000) 
    .fluidOutputs(fluid('colloidal_silica') * 5000)
    .fluidOutputs(fluid('salt_water') * 2000)
    .duration(200)
    .EUt(480)
    .buildAndRegister();

BR.recipeBuilder()
    .inputs(ore('dustAluminium'))
    .fluidInputs(fluid('isopropyl_alcohol') * 3000)
    .outputs(metaitem('dustAluminiumIsopropoxide'))
    .fluidOutputs(fluid('hydrogen') * 3000)
    .duration(200)
    .EUt(30)
    .buildAndRegister()

AUTOCLAVE.recipeBuilder() // Al(OH)3 -> AlO(OH) + H2O
    .inputs(ore('dustAluminiumHydroxide') * 7)
    .outputs(metaitem('dustBoehmite') * 4)
    .fluidOutputs(fluid('wastewater') * 1000)
    .duration(200)
    .EUt(30)
    .buildAndRegister()

// Type A zeolite (LTA structure, molecular sieve, 3 angstrom, SAR = 1, 1K:2Na, ethanol dehydration)

AUTOCLAVE.recipeBuilder()
    .circuitMeta(1)
    .inputs(ore('dustSodiumHydroxide') * 10)
    .fluidInputs(fluid('sodium_aluminate_solution') * 1500)
    .fluidInputs(fluid('diluted_sodium_silicate_solution') * 4000)
    .fluidInputs(fluid('distilled_water') * 6500)
    .fluidOutputs(fluid('sodium_a_zeolite_solution') * 12000)
    .duration(180)
    .EUt(60)
    .buildAndRegister()

SIFTER.recipeBuilder()
    .notConsumable(metaitem('item_filter'))
    .fluidInputs(fluid('sodium_a_zeolite_solution') * 12000)
    .outputs(metaitem('dustSodiumAZeolite'))
    .fluidOutputs(fluid('wastewater') * 12000)
    .duration(400)
    .EUt(60)
    .buildAndRegister()

ION_EXCHANGE.recipeBuilder()
    .notConsumable(metaitem('beads.strong_acidic_cation_exchange'))
    .inputs(metaitem('dustSodiumAZeolite') * 3)
    .fluidInputs(fluid('potassium_chloride_solution') * 1000)
    .outputs(metaitem('dustSodiumPotassiumAZeolite'))
    .fluidOutputs(fluid('salt_water') * 1000)
    .duration(200)
    .EUt(480)
    .buildAndRegister()

MIXER.recipeBuilder()
    .inputs(ore('dustSodiumPotassiumAZeolite'))
    .inputs(ore('dustClay'))
    .outputs(metaitem('dustMolecularSieveA'))
    .duration(180)
    .EUt(30)
    .buildAndRegister()

DRYER.recipeBuilder()
    .inputs(ore('dustWetMolecularSieveA'))
    .outputs(metaitem('dustMolecularSieveA'))
    .fluidOutputs(fluid('dense_steam') * 100)
    .duration(100)
    .EUt(30)
    .buildAndRegister()

// Type X zeolite (FAU structure, molecular sieve, 13 angstrom, SAR = 1, sodium ions, decarburization & nitrogen PSA)

AUTOCLAVE.recipeBuilder()
    .inputs(ore('dustSodiumHydroxide') * 36)
    .fluidInputs(fluid('sodium_aluminate_solution') * 750)
    .fluidInputs(fluid('sodium_silicate_solution') * 1500)
    .fluidInputs(fluid('distilled_water') * 3750)
    .fluidOutputs(fluid('sodium_x_zeolite_solution') * 6000)
    .duration(180)
    .EUt(30)
    .buildAndRegister()

SIFTER.recipeBuilder()
    .notConsumable(metaitem('item_filter'))
    .fluidInputs(fluid('sodium_x_zeolite_solution') * 12000)
    .outputs(metaitem('dustSodiumXZeolite'))
    .fluidOutputs(fluid('wastewater') * 12000)
    .duration(400)
    .EUt(60)
    .buildAndRegister()

MIXER.recipeBuilder()
    .inputs(ore('dustSodiumXZeolite'))
    .inputs(ore('dustClay'))
    .outputs(metaitem('dustMolecularSieveX'))
    .duration(180)
    .EUt(30)
    .buildAndRegister()

// Type Y zeolite (FAU structure, FCC catalyst, REE catalyst)

AUTOCLAVE.recipeBuilder()
    .circuitMeta(2)
    .inputs(ore('dustSodiumHydroxide') * 14)
    .fluidInputs(fluid('sodium_aluminate_solution') * 1500)
    .fluidInputs(fluid('sodium_silicate_solution') * 4000)
    .fluidInputs(fluid('distilled_water') * 4000)
    .fluidInputs(fluid('tetramethylammonium_hydroxide_solution') * 2500)
    .fluidOutputs(fluid('sodium_y_zeolite_solution') * 12000)
    .duration(180)
    .EUt(480)
    .buildAndRegister()

SIFTER.recipeBuilder()
    .notConsumable(metaitem('item_filter'))
    .fluidInputs(fluid('sodium_y_zeolite_solution') * 12000)
    .outputs(metaitem('dustSodiumYZeolite'))
    .fluidOutputs(fluid('wastewater') * 12000)
    .duration(100)
    .EUt(60)
    .buildAndRegister()

ION_EXHANGE.recipeBuilder()
    .notConsumable(metaitem('beads.strong_acidic_cation_exchange'))
    .inputs(metaitem('dustSodiumYZeolite'))
    .fluidInputs(fluid('ammonium_chloride_solution') * 1000)
    .outputs(metaitem('dustAmmoniumYZeolite'))
    .fluidOutputs(fluid('salt_water') * 1000)
    .duration(200)
    .EUt(480)
    .buildAndRegister()

ROASTER.recipeBuilder()
    .inputs(ore('dustAmmoniumYZeolite'))
    .fluidInputs(fluid('dense_steam') * 1000)
    .outputs(metaitem('dustDealuminizedYZeolite'))
    .fluidOutputs(fluid('wastewater') * 1000)
    .duration(100)
    .EUt(60)
    .buildAndRegister()

ION_EXHANGE.recipeBuilder()
    .notConsumable(metaitem('beads.strong_acidic_cation_exchange'))
    .inputs(metaitem('dustDealuminizedYZeolite') * 4)
    .fluidInputs(fluid('lanthanum_nitrate_solution') * 1000)
    .outputs(metaitem('cracking_catalyst'))
    .fluidOutputs(fluid('wastewater') * 1000)
    .duration(200)
    .EUt(480)
    .buildAndRegister()

// ZSM-5 (pentasil high SAR zeolite, methanol to gasoline)

FBR.recipeBuilder()
    .notConsumable(metaitem('catalystBedAlumina'))
    .fluidInputs(fluid('ammonia') * 50)
    .fluidInputs(fluid('n_propanol') * 150)
    .fluidOutputs(fluid('tripropylamine') * 50)
    .fluidOutputs(fluid('water') * 150)
    .duration(5)
    .EUt(120)
    .buildAndRegister();

BR.recipeBuilder()
    .notConsumable(metaitem('emitter.lv'))
    .notConsumable(fluid('hydrogen_peroxide_solution') * 50)
    .fluidInputs(fluid('hydrobromic_acid') * 1000)
    .fluidInputs(fluid('propene') * 1000)
    .fluidOutputs(fluid('n_bromopropane') * 1000)
    .fluidOutputs(fluid('water') * 1000)
    .duration(5)
    .EUt(120)
    .buildAndRegister();

BR.recipeBuilder()
    .fluidInputs(fluid('n_bromopropane') * 1000)
    .fluidInputs(fluid('tripropylamine') * 1000)
    .outputs(metaitem('dustTetrapropylammoniumBromide'))
    .duration(5)
    .EUt(120)
    .buildAndRegister();

LCR.recipeBuilder()
    .notConsumable(metaitem('item_filter'))
    .inputs(ore('dustAluminiumIsopropoxide'))
    .inputs(ore('dustSodiumHydroxide') * 3)
    .inputs(ore('dustTetrapropylammoniumBromide') * 9)
    .fluidInputs(fluid('colloidal_silica') * 125000)
    .fluidInputs(fluid('deionized_water') * 3000)
    .outputs(metaitem('dustSodiumZsmFive')) // NaZSM-5
    .fluidOutputs(fluid('wastewater') * 128000)
    .duration(500)
    .EUt(480)
    .buildAndRegister();

ION_EXCHANGE.recipeBuilder()
    .notConsumable(metaitem('beads.strong_acidic_cation_exchange'))
    .inputs(metaitem('dustSodiumZsmFive'))
    .fluidInputs(fluid('hydrochloric_acid') * 1000)
    .outputs(metaitem('dustHydrogenZsmFive'))
    .fluidOutputs(fluid('salt_water') * 1000)
    .duration(200)
    .EUt(480)
    .buildAndRegister();

ION_EXCHANGE.recipeBuilder()
    .notConsumable(metaitem('beads.strong_acidic_cation_exchange'))
    .inputs(metaitem('dustHydrogenZsmFive') * 4)
    .fluidInputs(fluid('magnesium_nitrate_solution') * 50)
    .fluidInputs(fluid('diammonium_hydrogen_phosphate_solution') * 10)
    .outputs(metaitem('catalystBedModifiedZsmFive'))
    .fluidOutputs(fluid('wastewater') * 1000)
    .duration(200)
    .EUt(480)
    .buildAndRegister();

// Silicoaluminophosphates, technically a zeosil, not a zeolite. (SAPO-11)
// Cooperative effects of secondary mesoporosity and acid site location in Pt/SAPO-11 on n-dodecane hydroisomerization selectivity

LCR.recipeBuilder()
    .notConsumable(metaitem('item_filter'))
    .inputs(ore('dustBoehmite') * 4)
    .fluidInputs(fluid('diisopropylamine') * 1200)
    .fluidInputs(fluid('phosphoric_acid') * 1000)
    .fluidInputs(fluid('tetraethyl_orthosilicate') * 200)
    .fluidInputs(fluid('deionized_water') * 50000)
    .outputs(metaitem('dustSapoEleven'))
    .fluidOutputs(fluid('wastewater') * 50000)
    .duration(600)
    .EUt(1920)
    .buildAndRegister()

BR.recipeBuilder()
    .inputs(ore('dustPlatinum'))
    .fluidInputs(fluid('aqua_regia') * 8000)
    .fluidInputs(fluid('nitric_acid') * 2000)
    .fluidOutputs(fluid('chloroplatinic_acid_solution') * 4000)
    .fluidOutputs(fluid('nitrogen_dioxide') * 4000)
    .duration(20)
    .EUt(30)
    .buildAndRegister()
    
BR.recipeBuilder()
    .inputs(ore('dustSapoEleven'))
    .inputs(ore('dustSodiumHydroxide') * 3)
    .fluidInputs(fluid('ethylene_glycol') * 500)
    .fluidInputs(fluid('chloroplatinic_acid_solution') * 1000)
    .outputs(metaitem('dustPlatinumSapoEleven'))
    .fluidOutputs(fluid('wastewater') * 1500)
    .duration(600)
    .EUt(1920)
    .buildAndRegister()
