import globals.Globals

BR = recipemap('batch_reactor')
ION_EXCHANGE = recipemap('ion_exchange_column')
REACTION_FURNACE = recipemap('reaction_furnace')

ION_EXCHANGE.recipeBuilder()
    .inputs(metaitem('beads.loaded_lutetium_cation_exchange'))
    .fluidInputs(fluid('ammonium_chloride_solution') * 30)
    .fluidInputs(fluid('diluted_sulfuric_acid') * 30)
    .outputs(metaitem('beads.strong_acidic_cation_exchange'))
    .fluidOutputs(fluid('lutetium_chloride_solution') * 30)
    .fluidOutputs(fluid('ammonium_sulfate_solution') * 15)
    .duration(80)
    .EUt(30)
    .buildAndRegister()

BR.recipeBuilder()
    .fluidInputs(fluid('lutetium_chloride_solution') * 3000)
    .fluidInputs(fluid('hydrofluoric_acid') * 3000)
    .outputs(metaitem('dustLutetiumFluoride') * 4)
    .fluidOutputs(fluid('diluted_hydrochloric_acid') * 6000)
    .duration(80)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

REACTION_FURNACE.recipeBuilder()
    .notConsumable(metaitem('crucible.tantalum'))
    .inputs(ore('dustLutetiumFluoride') * 8)
    .inputs(ore('dustHighPurityCalcium') * 3)
    .fluidInputs(fluid('helium') * 50)
    .outputs(metaitem('dustLutetium') * 2)
    .outputs(metaitem('dustFluorite') * 9)
    .duration(200)
    .EUt(Globals.voltAmps[3])
    .buildAndRegister()