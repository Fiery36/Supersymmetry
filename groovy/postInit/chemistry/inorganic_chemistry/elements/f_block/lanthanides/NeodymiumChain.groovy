import globals.Globals

BR = recipemap('batch_reactor')
REACTION_FURNACE = recipemap('reaction_furnace')
ROASTER = recipemap('roaster')

BR.recipeBuilder()
    .fluidInputs(fluid('neodymium_chloride_solution') * 3000)
    .fluidInputs(fluid('hydrofluoric_acid') * 3000)
    .outputs(metaitem('dustNeodymiumFluoride') * 4)
    .fluidOutputs(fluid('diluted_hydrochloric_acid') * 6000)
    .duration(80)
    .EUt(30)
    .buildAndRegister()

BR.recipeBuilder()
    .inputs(ore('dustSodiumHydroxide') * 9)
    .fluidInputs(fluid('neodymium_chloride_solution') * 3000)
    .outputs(metaitem('dustNeodymiumHydroxide') * 7)
    .fluidOutputs(fluid('salt_water') * 3000)
    .duration(80)
    .EUt(30)
    .buildAndRegister()

ROASTER.recipeBuilder()
    .inputs(metaitem('dustNeodymiumHydroxide') * 14)
    .outputs(metaitem('dustNeodymiumOxide') * 5)
    .fluidOutputs(fluid('dense_steam') * 3000)
    .duration(100)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()

REACTION_FURNACE.recipeBuilder()
    .notConsumable(metaitem('crucible.tantalum'))
    .inputs(ore('dustNeodymiumFluoride') * 8)
    .inputs(ore('dustHighPurityCalcium') * 3)
    .fluidInputs(fluid('argon') * 50)
    .outputs(metaitem('dustNeodymium') * 2)
    .outputs(metaitem('dustFluorite') * 9)
    .duration(200)
    .EUt(960)
    .buildAndRegister()