import globals.Globals

REACTION_FURNACE = recipemap('reaction_furnace')
ROASTER = recipemap('roaster')
BR = recipemap('batch_reactor')

BR.recipeBuilder()
    .fluidInputs(fluid('ytterbium_amalgam') * 1000)
    .fluidInputs(fluid('hydrochloric_acid') * 5000)
    .outputs(metaitem('dustMercuryIiChloride') * 3)
    .fluidOutputs(fluid('hydrogen') * 5000)
    .fluidOutputs(fluid('ytterbium_chloride_solution') * 5000)
    .duration(80)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

BR.recipeBuilder()
    .inputs(ore('dustSodiumHydroxide') * 9)
    .fluidInputs(fluid('distilled_water') * 1000)
    .fluidInputs(fluid('ytterbium_chloride_solution') * 5000)
    .outputs(metaitem('dustYtterbiumHydroxide') * 7)
    .fluidOutputs(fluid('diluted_salt_water') * 6000)
    .duration(80)
    .EUt(Globals.voltAmps[1])
    .buildAndRegister()

ROASTER.recipeBuilder()
    .inputs(ore('dustYtterbiumHydroxide') * 14)
    .outputs(metaitem('dustYtterbiumOxide') * 5)
    .fluidOutputs(fluid('dense_steam') * 3000)
    .duration(100)
    .EUt(120)
    .buildAndRegister()

REACTION_FURNACE.recipeBuilder()
    .notConsumable(metaitem('crucible.tantalum'))
    .inputs(ore('dustYtterbiumOxide') * 5)
    .inputs(ore('dustLanthanum') * 2)
    .outputs(metaitem('dustYtterbium') * 2)
    .outputs(metaitem('dustLanthanumOxide') * 5)
    .duration(200)
    .EUt(480)
    .buildAndRegister()