import globals.Globals

BR = recipemap('batch_reactor')
REACTION_FURNACE = recipemap('reaction_furnace')
ROASTER = recipemap('roaster')
DISTILLERY = recipemap('distillery')
MIXER_SETTLER = recipemap('mixer_settler')

// Cerium reductive stripping
// 2Ce(NO3)4 + H2O2 -> 2Ce(NO3)3 + O2 + 2HNO3
MIXER_SETTLER.recipeBuilder()
    .fluidInputs(fluid('cerium_extract') * 20000)
    .fluidInputs(fluid('hydrogen_peroxide_solution') * 500)
    .fluidOutputs(fluid('cerium_iii_nitrate_solution') * 1500)
    .fluidOutputs(fluid('tributyl_phosphate_extraction_mixture') * 20000)
    .fluidOutputs(fluid('oxygen') * 1000)
    .duration(80)
    .EUt(30)
    .requiredCells(2)
    .buildAndRegister()

BR.recipeBuilder()
    .fluidInputs(fluid('cerium_iii_nitrate_solution') * 1500)
    .fluidInputs(fluid('hydrofluoric_acid') * 3000)
    .fluidInputs(fluid('distilled_water') * 500)
    .outputs(metaitem('dustCeriumIiiFluoride') * 4)
    .fluidOutputs(fluid('diluted_nitric_acid') * 8000)
    .duration(80)
    .EUt(30)
    .buildAndRegister()

REACTION_FURNACE.recipeBuilder()
    .notConsumable(metaitem('crucible.tantalum'))
    .inputs(ore('dustCeriumIiiFluoride') * 8)
    .inputs(ore('dustHighPurityCalcium') * 3)
    .fluidInputs(fluid('argon') * 50)
    .outputs(metaitem('dustCerium') * 2)
    .outputs(metaitem('dustFluorite') * 9)
    .duration(200)
    .EUt(960)
    .buildAndRegister()

// From Xenotime
// Ce(IV) + Cl- -> Ce(III) + 1/2Cl2
BR.recipeBuilder()
    .inputs(ore('dustCeriumIvHydroxide') * 9)
    .fluidInputs(fluid('hydrochloric_acid') * 4000)
    .fluidOutputs(fluid('cerium_iii_chloride_solution') * 8000)
    .fluidOutputs(fluid('chlorine') * 1000)
    .duration(80)
    .EUt(30)
    .buildAndRegister()

DISTILLERY.recipeBuilder()
    .fluidInputs(fluid('cerium_iii_chloride_solution') * 8000)
    .outputs(metaitem('dustCeriumIiiChloride') * 4)
    .fluidOutputs(fluid('water') * 8000)
    .duration(20)
    .EUt(30)
    .buildAndRegister()

BR.recipeBuilder()
    .inputs(ore('dustCeriumIiiChloride') * 4)
    .fluidInputs(fluid('hydrofluoric_acid') * 3000)
    .outputs(metaitem('dustCeriumIiiFluoride') * 4)
    .fluidOutputs(fluid('hydrochloric_acid') * 3000)
    .duration(80)
    .EUt(30)
    .buildAndRegister()