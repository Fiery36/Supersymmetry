import globals.Globals

LCR = recipemap('large_chemical_reactor')
CSTR = recipemap('continuous_stirred_tank_reactor')
DISTILLERY = recipemap('distillery')
POLYMERIZATION = recipemap('polymerization_tank')

LCR.recipeBuilder()
    .inputs(ore('dustSodiumSulfate') * 7)
    .fluidInputs(fluid('ethanol') * 2000)
    .fluidInputs(fluid('chlorosulfuric_acid') * 2000)
    .outputs(metaitem('dustSodiumBisulfate') * 14)
    .fluidOutputs(fluid('diethyl_sulfate') * 1000)
    .fluidOutputs(fluid('hydrogen_chloride') * 2000)
    .duration(600)
    .EUt(120)
    .buildAndRegister()

CSTR.recipeBuilder()
    .fluidInputs(fluid('chlorobenzene') * 2000)
    .fluidInputs(fluid('sulfur_trioxide') * 1000)
    .fluidInputs(fluid('diethyl_sulfate') * 2000)
    .fluidOutputs(fluid('dichlorodiphenyl_sulfone_solution') * 3000)
    .duration(5)
    .EUt(120)
    .buildAndRegister()

DISTILLERY.recipeBuilder()
    .fluidInputs(fluid('dichlorodiphenyl_sulfone_solution') * 3000)
    .outputs(metaitem('dustDichlorodiphenylSulfone') * 25)
    .fluidOutputs(fluid('diethyl_sulfate') * 2000)
    .duration(600)
    .EUt(120)
    .buildAndRegister()

POLYMERIZATION.recipeBuilder()
    .notConsumable(fluid('dimethyl_sulfone') * 1000)
    .inputs(ore('dustDichlorodiphenylSulfone') * 25)
    .inputs(ore('dustSodiumBisphenolate') * 33)
    .outputs(metaitem('dustPolysulfone'))
    .duration(100)
    .EUt(Globals.voltAmps[2])
    .buildAndRegister()